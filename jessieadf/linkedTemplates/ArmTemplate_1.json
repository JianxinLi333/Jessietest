{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "jessieadf"
		},
		"AzureBatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'AzureBatch1'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://jessiebatchcn3.chinanorth3.batch.chinacloudapi.cn"
		},
		"AzureBatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "pool1"
		},
		"AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "jessiebatchcn3"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cc.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\\"
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"containerName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "folder1"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "folder1"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "t_task_list_test.parquet",
						"folderPath": "cxdata",
						"fileSystem": "output"
					},
					"compressionCodec": "gzip"
				},
				"schema": [
					{
						"name": "task_id",
						"type": "INT32"
					},
					{
						"name": "commitment_id",
						"type": "INT32"
					},
					{
						"name": "use_case_id",
						"type": "INT32"
					},
					{
						"name": "task_name",
						"type": "UTF8"
					},
					{
						"name": "task_main_type",
						"type": "UTF8"
					},
					{
						"name": "task_type",
						"type": "UTF8"
					},
					{
						"name": "task_status",
						"type": "UTF8"
					},
					{
						"name": "task_desc",
						"type": "UTF8"
					},
					{
						"name": "sas_id",
						"type": "INT32"
					},
					{
						"name": "create_time",
						"type": "INT96"
					},
					{
						"name": "update_time",
						"type": "INT96"
					},
					{
						"name": "create_by",
						"type": "UTF8"
					},
					{
						"name": "update_by",
						"type": "UTF8"
					},
					{
						"name": "version",
						"type": "INT32"
					},
					{
						"name": "direction_status",
						"type": "UTF8"
					},
					{
						"name": "sync_status",
						"type": "UTF8"
					},
					{
						"name": "is_delete",
						"type": "UTF8"
					},
					{
						"name": "is_trigger",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDW2MySQLtest3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "a_event",
						"type": "nvarchar"
					},
					{
						"name": "a_date",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EVENTS_QPI_test_column"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDW2MySQltest2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fruit",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "t2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLWD2MySQLtest1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "a_event",
						"type": "nvarchar"
					},
					{
						"name": "a_user_id",
						"type": "nvarchar"
					},
					{
						"name": "a_distinct_id",
						"type": "nvarchar"
					},
					{
						"name": "a_date",
						"type": "nvarchar"
					},
					{
						"name": "a_time",
						"type": "nvarchar"
					},
					{
						"name": "a_device_id",
						"type": "nvarchar"
					},
					{
						"name": "a_os_version",
						"type": "nvarchar"
					},
					{
						"name": "a_os",
						"type": "nvarchar"
					},
					{
						"name": "a_screen_height",
						"type": "nvarchar"
					},
					{
						"name": "a_is_first_day",
						"type": "nvarchar"
					},
					{
						"name": "a_lib",
						"type": "nvarchar"
					},
					{
						"name": "a_model",
						"type": "nvarchar"
					},
					{
						"name": "a_screen_width",
						"type": "nvarchar"
					},
					{
						"name": "a_network_type",
						"type": "nvarchar"
					},
					{
						"name": "a_appname",
						"type": "nvarchar"
					},
					{
						"name": "a_manufacturer",
						"type": "nvarchar"
					},
					{
						"name": "a_app_version",
						"type": "nvarchar"
					},
					{
						"name": "a_wifi",
						"type": "nvarchar"
					},
					{
						"name": "a_lib_version",
						"type": "nvarchar"
					},
					{
						"name": "a_is_first_time",
						"type": "nvarchar"
					},
					{
						"name": "a_resume_from_background",
						"type": "nvarchar"
					},
					{
						"name": "a_ip",
						"type": "nvarchar"
					},
					{
						"name": "a_is_login_id",
						"type": "nvarchar"
					},
					{
						"name": "a_city",
						"type": "nvarchar"
					},
					{
						"name": "a_province",
						"type": "nvarchar"
					},
					{
						"name": "a_country",
						"type": "nvarchar"
					},
					{
						"name": "a_screen_name",
						"type": "nvarchar"
					},
					{
						"name": "a_title",
						"type": "nvarchar"
					},
					{
						"name": "a_element_content",
						"type": "nvarchar"
					},
					{
						"name": "a_element_type",
						"type": "nvarchar"
					},
					{
						"name": "a_element_position",
						"type": "nvarchar"
					},
					{
						"name": "a_carrier",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_referrer",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_traffic_source_type",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_search_keyword",
						"type": "nvarchar"
					},
					{
						"name": "a_referrer",
						"type": "nvarchar"
					},
					{
						"name": "a_url",
						"type": "nvarchar"
					},
					{
						"name": "a_url_path",
						"type": "nvarchar"
					},
					{
						"name": "a_browser",
						"type": "nvarchar"
					},
					{
						"name": "a_browser_version",
						"type": "nvarchar"
					},
					{
						"name": "a_viewport_position",
						"type": "nvarchar"
					},
					{
						"name": "a_viewport_height",
						"type": "nvarchar"
					},
					{
						"name": "a_viewport_width",
						"type": "nvarchar"
					},
					{
						"name": "a_event_duration",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_referrer_host",
						"type": "nvarchar"
					},
					{
						"name": "a_referrer_host",
						"type": "nvarchar"
					},
					{
						"name": "a_element_class_name",
						"type": "nvarchar"
					},
					{
						"name": "a_element_target_url",
						"type": "nvarchar"
					},
					{
						"name": "a_element_selector",
						"type": "nvarchar"
					},
					{
						"name": "a_content_name",
						"type": "nvarchar"
					},
					{
						"name": "a_button_function",
						"type": "nvarchar"
					},
					{
						"name": "a_bill_amount",
						"type": "nvarchar"
					},
					{
						"name": "a_bill_month",
						"type": "nvarchar"
					},
					{
						"name": "a_track_signup_original_id",
						"type": "nvarchar"
					},
					{
						"name": "a_order_id",
						"type": "nvarchar"
					},
					{
						"name": "a_charge_amount",
						"type": "nvarchar"
					},
					{
						"name": "a_platform_type",
						"type": "nvarchar"
					},
					{
						"name": "a_community_name",
						"type": "nvarchar"
					},
					{
						"name": "a_element_id",
						"type": "nvarchar"
					},
					{
						"name": "a_is_overdued",
						"type": "nvarchar"
					},
					{
						"name": "a_last_referrer",
						"type": "nvarchar"
					},
					{
						"name": "a_property_name",
						"type": "nvarchar"
					},
					{
						"name": "a_app_crashed_reason",
						"type": "nvarchar"
					},
					{
						"name": "a_bill_type",
						"type": "nvarchar"
					},
					{
						"name": "a_coupon_amount",
						"type": "nvarchar"
					},
					{
						"name": "a_has_coupon",
						"type": "nvarchar"
					},
					{
						"name": "a_button_name",
						"type": "nvarchar"
					},
					{
						"name": "a_page_title",
						"type": "nvarchar"
					},
					{
						"name": "a_prepaid_months",
						"type": "nvarchar"
					},
					{
						"name": "a_last_button",
						"type": "nvarchar"
					},
					{
						"name": "a_failure_reason",
						"type": "nvarchar"
					},
					{
						"name": "a_is_success",
						"type": "nvarchar"
					},
					{
						"name": "a_payment_method",
						"type": "nvarchar"
					},
					{
						"name": "a_identity",
						"type": "nvarchar"
					},
					{
						"name": "a_property_address",
						"type": "nvarchar"
					},
					{
						"name": "a_request_id",
						"type": "nvarchar"
					},
					{
						"name": "a_name",
						"type": "nvarchar"
					},
					{
						"name": "a_nickname",
						"type": "nvarchar"
					},
					{
						"name": "a_login_type",
						"type": "nvarchar"
					},
					{
						"name": "a_internet_type",
						"type": "nvarchar"
					},
					{
						"name": "a_error_message",
						"type": "nvarchar"
					},
					{
						"name": "a_failure_code",
						"type": "nvarchar"
					},
					{
						"name": "a_interface_name",
						"type": "nvarchar"
					},
					{
						"name": "a_failurereason",
						"type": "nvarchar"
					},
					{
						"name": "a_short_url_key",
						"type": "nvarchar"
					},
					{
						"name": "a_short_url_target",
						"type": "nvarchar"
					},
					{
						"name": "a_utm_campaign",
						"type": "nvarchar"
					},
					{
						"name": "a_utm_content",
						"type": "nvarchar"
					},
					{
						"name": "a_utm_medium",
						"type": "nvarchar"
					},
					{
						"name": "a_utm_source",
						"type": "nvarchar"
					},
					{
						"name": "a_utm_term",
						"type": "nvarchar"
					},
					{
						"name": "a_process_duration",
						"type": "nvarchar"
					},
					{
						"name": "a_request_scene",
						"type": "nvarchar"
					},
					{
						"name": "a_authorize_id",
						"type": "nvarchar"
					},
					{
						"name": "a_submit_item",
						"type": "nvarchar"
					},
					{
						"name": "a_app_name",
						"type": "nvarchar"
					},
					{
						"name": "a_app_state",
						"type": "nvarchar"
					},
					{
						"name": "a_appclick",
						"type": "nvarchar"
					},
					{
						"name": "a_appstart",
						"type": "nvarchar"
					},
					{
						"name": "a_platform",
						"type": "nvarchar"
					},
					{
						"name": "a_item_price",
						"type": "nvarchar"
					},
					{
						"name": "a_payment_type",
						"type": "nvarchar"
					},
					{
						"name": "a_property_type",
						"type": "nvarchar"
					},
					{
						"name": "a_quest_id",
						"type": "nvarchar"
					},
					{
						"name": "a_element_name",
						"type": "nvarchar"
					},
					{
						"name": "a_mac_addr",
						"type": "nvarchar"
					},
					{
						"name": "a_etl_date",
						"type": "nvarchar"
					},
					{
						"name": "a_source_system",
						"type": "nvarchar"
					},
					{
						"name": "a_kafka_offset",
						"type": "nvarchar"
					},
					{
						"name": "a_position",
						"type": "nvarchar"
					},
					{
						"name": "a_job_rank",
						"type": "nvarchar"
					},
					{
						"name": "a_ou_1",
						"type": "nvarchar"
					},
					{
						"name": "a_ou_2",
						"type": "nvarchar"
					},
					{
						"name": "a_ou_3",
						"type": "nvarchar"
					},
					{
						"name": "a_department",
						"type": "nvarchar"
					},
					{
						"name": "a_department_id",
						"type": "nvarchar"
					},
					{
						"name": "a_ou_1_id",
						"type": "nvarchar"
					},
					{
						"name": "a_ou_2_id",
						"type": "nvarchar"
					},
					{
						"name": "a_ou_3_id",
						"type": "nvarchar"
					},
					{
						"name": "a_is_department_leader",
						"type": "nvarchar"
					},
					{
						"name": "a_device_type",
						"type": "nvarchar"
					},
					{
						"name": "a_instance_id",
						"type": "nvarchar"
					},
					{
						"name": "a_workflow_name",
						"type": "nvarchar"
					},
					{
						"name": "a_workflow_code",
						"type": "nvarchar"
					},
					{
						"name": "a_instance_state",
						"type": "nvarchar"
					},
					{
						"name": "a_workflow_version",
						"type": "nvarchar"
					},
					{
						"name": "a_activity_id",
						"type": "nvarchar"
					},
					{
						"name": "a_activity_name",
						"type": "nvarchar"
					},
					{
						"name": "a_token_id",
						"type": "nvarchar"
					},
					{
						"name": "a_workitem_id",
						"type": "nvarchar"
					},
					{
						"name": "a_comment_type",
						"type": "nvarchar"
					},
					{
						"name": "a_failure_params",
						"type": "nvarchar"
					},
					{
						"name": "a_utm_matching_type",
						"type": "nvarchar"
					},
					{
						"name": "a_matched_key",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_utm_campaign",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_utm_source",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_utm_medium",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_utm_term",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_utm_content",
						"type": "nvarchar"
					},
					{
						"name": "a_url_host",
						"type": "nvarchar"
					},
					{
						"name": "a_offline_pkg_version",
						"type": "nvarchar"
					},
					{
						"name": "a_function_moudule",
						"type": "nvarchar"
					},
					{
						"name": "a_trade_category",
						"type": "nvarchar"
					},
					{
						"name": "a_order_type",
						"type": "nvarchar"
					},
					{
						"name": "a_order_module",
						"type": "nvarchar"
					},
					{
						"name": "a_door_name",
						"type": "nvarchar"
					},
					{
						"name": "a_is_need_invoice",
						"type": "nvarchar"
					},
					{
						"name": "a_order_notes",
						"type": "nvarchar"
					},
					{
						"name": "a_order_amount",
						"type": "nvarchar"
					},
					{
						"name": "a_actual_pay_amount",
						"type": "nvarchar"
					},
					{
						"name": "a_date_date",
						"type": "date"
					},
					{
						"name": "a_from",
						"type": "nvarchar"
					},
					{
						"name": "a_merchant_name",
						"type": "nvarchar"
					},
					{
						"name": "a_product_name",
						"type": "nvarchar"
					},
					{
						"name": "a_product_type",
						"type": "nvarchar"
					},
					{
						"name": "a_bill_list_type",
						"type": "nvarchar"
					},
					{
						"name": "a_activity_form",
						"type": "nvarchar"
					},
					{
						"name": "a_activity_type",
						"type": "nvarchar"
					},
					{
						"name": "a_activity_title",
						"type": "nvarchar"
					},
					{
						"name": "a_number_of_product_sku",
						"type": "nvarchar"
					},
					{
						"name": "a_property_community",
						"type": "nvarchar"
					},
					{
						"name": "a_content_type",
						"type": "nvarchar"
					},
					{
						"name": "a_has_picture",
						"type": "nvarchar"
					},
					{
						"name": "a_has_text",
						"type": "nvarchar"
					},
					{
						"name": "a_has_result",
						"type": "nvarchar"
					},
					{
						"name": "a_key_wodrs",
						"type": "nvarchar"
					},
					{
						"name": "a_channel_active_result",
						"type": "nvarchar"
					},
					{
						"name": "a_channel_attribute_period_hour",
						"type": "nvarchar"
					},
					{
						"name": "a_channel_active_period_day",
						"type": "nvarchar"
					},
					{
						"name": "a_channel_click_id",
						"type": "nvarchar"
					},
					{
						"name": "a_channel_name",
						"type": "nvarchar"
					},
					{
						"name": "a_code",
						"type": "nvarchar"
					},
					{
						"name": "a_phonenumber",
						"type": "nvarchar"
					},
					{
						"name": "a_content",
						"type": "nvarchar"
					},
					{
						"name": "a_res",
						"type": "nvarchar"
					},
					{
						"name": "a_file_path",
						"type": "nvarchar"
					},
					{
						"name": "a_result_data",
						"type": "nvarchar"
					},
					{
						"name": "a_failrue_reason",
						"type": "nvarchar"
					},
					{
						"name": "a_has_type",
						"type": "nvarchar"
					},
					{
						"name": "a_type_report",
						"type": "nvarchar"
					},
					{
						"name": "a_language_code",
						"type": "nvarchar"
					},
					{
						"name": "a_app_id",
						"type": "nvarchar"
					},
					{
						"name": "a_timezone_offset",
						"type": "nvarchar"
					},
					{
						"name": "a_idmap_reason",
						"type": "nvarchar"
					},
					{
						"name": "a_element_path",
						"type": "nvarchar"
					},
					{
						"name": "a_share_source",
						"type": "nvarchar"
					},
					{
						"name": "a_receive_time",
						"type": "nvarchar"
					},
					{
						"name": "a_bot_name",
						"type": "nvarchar"
					},
					{
						"name": "a_userphone",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_scene",
						"type": "nvarchar"
					},
					{
						"name": "a_username",
						"type": "nvarchar"
					},
					{
						"name": "a_share_depth",
						"type": "nvarchar"
					},
					{
						"name": "a_channel_type",
						"type": "nvarchar"
					},
					{
						"name": "a_url_query",
						"type": "nvarchar"
					},
					{
						"name": "a_room_type_name",
						"type": "nvarchar"
					},
					{
						"name": "a_function_module",
						"type": "nvarchar"
					},
					{
						"name": "a_wx_version",
						"type": "nvarchar"
					},
					{
						"name": "a_phones_ystem",
						"type": "nvarchar"
					},
					{
						"name": "a_login_time",
						"type": "nvarchar"
					},
					{
						"name": "a_scene",
						"type": "nvarchar"
					},
					{
						"name": "a_checkouttime",
						"type": "nvarchar"
					},
					{
						"name": "a_has_display",
						"type": "nvarchar"
					},
					{
						"name": "a_checkintime",
						"type": "nvarchar"
					},
					{
						"name": "a_checkinout_time",
						"type": "nvarchar"
					},
					{
						"name": "a_is_submit",
						"type": "nvarchar"
					},
					{
						"name": "a_room_price_name",
						"type": "nvarchar"
					},
					{
						"name": "a_phone_number",
						"type": "nvarchar"
					},
					{
						"name": "a_number_of_room",
						"type": "nvarchar"
					},
					{
						"name": "a_product_number",
						"type": "nvarchar"
					},
					{
						"name": "a_product_sku",
						"type": "nvarchar"
					},
					{
						"name": "a_product_staydays",
						"type": "nvarchar"
					},
					{
						"name": "a_goodsname",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_share_url_path",
						"type": "nvarchar"
					},
					{
						"name": "a_share_url_path",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_share_distinct_id",
						"type": "nvarchar"
					},
					{
						"name": "a_latest_share_depth",
						"type": "nvarchar"
					},
					{
						"name": "a_share_distinct_id",
						"type": "nvarchar"
					},
					{
						"name": "a_user_name",
						"type": "nvarchar"
					},
					{
						"name": "a_tag_value",
						"type": "nvarchar"
					},
					{
						"name": "a_tag_name",
						"type": "nvarchar"
					},
					{
						"name": "a_trigger_scene",
						"type": "nvarchar"
					},
					{
						"name": "a_action_type",
						"type": "nvarchar"
					},
					{
						"name": "a_chatbot_version",
						"type": "nvarchar"
					},
					{
						"name": "a_session_id",
						"type": "nvarchar"
					},
					{
						"name": "a_evaluation_choose",
						"type": "nvarchar"
					},
					{
						"name": "a_response_content",
						"type": "nvarchar"
					},
					{
						"name": "a_send_content",
						"type": "nvarchar"
					},
					{
						"name": "a_response_id",
						"type": "nvarchar"
					},
					{
						"name": "a_tips_module",
						"type": "nvarchar"
					},
					{
						"name": "a_tips_content",
						"type": "nvarchar"
					},
					{
						"name": "a_issuccess",
						"type": "nvarchar"
					},
					{
						"name": "a_tips_type",
						"type": "nvarchar"
					},
					{
						"name": "a_popup_name",
						"type": "nvarchar"
					},
					{
						"name": "a_ins_idfv",
						"type": "nvarchar"
					},
					{
						"name": "a_channel_link_id",
						"type": "nvarchar"
					},
					{
						"name": "a_channel_app_precise_result",
						"type": "nvarchar"
					},
					{
						"name": "a_product_category",
						"type": "nvarchar"
					},
					{
						"name": "a_commodity_id",
						"type": "nvarchar"
					},
					{
						"name": "a_operate_entrance",
						"type": "nvarchar"
					},
					{
						"name": "a_settle_state",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "t1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cdh-hadoop"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hdfs2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Hdfs1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HdfsLocation",
						"fileName": "blob2.json",
						"folderPath": "111"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatch1_properties_typeProperties_poolName')]",
					"accountName": "[parameters('AzureBatch1_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('AzureBatch1_accessKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "Self-IR1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "truncate table t1"
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLWD2MySQLtest1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "truncate table t2"
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLDW2MySQltest2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data1_copy2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "truncate table EVENTS_QPI_test_column"
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLDW2MySQLtest3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy data1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy data1_copy2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select 1"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-13T06:02:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLWD2MySQLtest1')]",
				"[concat(variables('factoryId'), '/datasets/SQLDW2MySQltest2')]",
				"[concat(variables('factoryId'), '/datasets/SQLDW2MySQLtest3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VariablesTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select count(*) from information_schema.collations",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzurePostgreSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Count",
							"value": {
								"value": "@string(activity('Lookup1').output.firstRow.count)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": {
								"value": "@variables('Count')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Count": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testbatch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "cmd /C python main.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"folderPath": "input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBatch1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['input']) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          task_id as integer,",
						"          commitment_id as integer,",
						"          use_case_id as integer,",
						"          task_name as string,",
						"          task_main_type as string,",
						"          task_type as string,",
						"          task_status as string,",
						"          task_desc as string,",
						"          sas_id as integer,",
						"          create_time as timestamp,",
						"          update_time as timestamp,",
						"          create_by as string,",
						"          update_by as string,",
						"          version as integer,",
						"          direction_status as string,",
						"          sync_status as string,",
						"          is_delete as string,",
						"          is_trigger as string",
						"     ),",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-03-06T15:34:00",
						"timeZone": "China Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "testbatch",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2023-03-06T08:27:00",
						"timeZone": "China Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								9
							],
							"monthDays": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/testbatch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger5')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "VariablesTest",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 2,
						"startTime": "2023-01-01T02:48:00",
						"timeZone": "China Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								11
							],
							"monthDays": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/VariablesTest')]"
			]
		}
	]
}